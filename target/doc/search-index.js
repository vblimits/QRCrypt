var searchIndex = new Map(JSON.parse('[["qrcrypt",{"t":"CCCHHHHHHHCHCCFGPPPPPPNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOFFSFONNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONNNNPPPPPPPPGPPIPPNNNNNNNNNNNNNNNNNNNNPFGFFPONNNNNNNNONONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNOONONONNNNNNNONNHHHHHHHHHHHHHHH","n":["cli","crypto","error","handle_decrypt","handle_encrypt","handle_example","handle_reconstruct","handle_split","handle_validate","main","qr","run_command","shamir","utils","Cli","Commands","Decrypt","Encrypt","Example","Reconstruct","Split","Validate","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","borrow_mut","","command","","command_for_update","deref","","deref_mut","","drop","","from","","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","init","","into","","parse_args","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","validate","vzip","","border","","data","","","example_type","file","","info","input","output","","","output_dir","prefix","scale","","secret","","shares","","threshold","total","words","Crypto","EncryptedData","NONCE_SIZE","SecretData","argon2","borrow","","","borrow_mut","","","ciphertext","clone","clone_into","clone_to_uninit","data","decrypt","default","deref","","","deref_mut","","","deserialize","drop","","","","encrypt","from","","","init","","","into","","","new","","nonce","salt","serialize","to_owned","try_from","","","try_into","","","type_id","","","verify_password","version","vzip","","","zeroize","Base64Decode","Decryption","Encryption","Err","HexDecode","InvalidInput","Io","Ok","QRCryptError","QRGeneration","QRParsing","Result","Serialization","ShamirError","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","","","init","into","source","to_string","try_from","try_into","type_id","vzip","EncryptedSecret","QRData","QRDataType","QRGenerator","QRReader","ShamirShare","border","borrow","","","","borrow_mut","","","","content","create_qr_image","data_type","default","deref","","","","deref_mut","","","","deserialize","","drop","","","","error_correction","fmt","from","","","","generate_encrypted_qr","generate_info_text","generate_multiple_shamir_qrs","generate_shamir_qr","init","","","","into","","","","new","parse_encrypted_data","parse_qr_data","parse_shamir_share","save_encrypted_qr","save_qr_image","save_shamir_qrs","scale","serialize","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","with_settings","ShamirSecretSharing","ShamirShare","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","drop","","fmt","from","","init","","into","","reconstruct_secret","serialize","share_data","share_id","split_secret","threshold","to_owned","total_shares","try_from","","try_into","","type_id","","validate_shares","version","vzip","","confirm_action","generate_example_seed","load_encrypted_from_data","load_encrypted_from_file","load_shares_from_data","load_shares_from_files","print_error","print_info","print_success","print_warning","read_file_content","read_password","read_secret_input","validate_seed_phrase","write_file_content"],"q":[[0,"qrcrypt"],[14,"qrcrypt::cli"],[65,"qrcrypt::cli::Commands"],[89,"qrcrypt::crypto"],[149,"qrcrypt::error"],[183,"qrcrypt::qr"],[261,"qrcrypt::shamir"],[302,"qrcrypt::utils"],[317,"std::path"],[318,"core::option"],[319,"alloc::string"],[320,"core::result"],[321,"alloc::vec"],[322,"clap_builder::builder::command"],[323,"clap_builder::parser::matches::arg_matches"],[324,"clap_builder"],[325,"clap_builder::util::id"],[326,"core::any"],[327,"argon2"],[328,"serde::de"],[329,"serde::ser"],[330,"core::fmt"],[331,"std::io::error"],[332,"serde_json::error"],[333,"base64::decode"],[334,"hex::error"],[335,"core::error"],[336,"image::dynimage"],[337,"qrcode::types"],[338,"core::convert"]],"i":"````````````````Af00000An011010100001010101010101010100101010101001BlBnC`CbCdCf544353244545421440````Ch0ClCn2101111022210210121002210210210201111210210210212100j00Fd1110`11`1111111111111111111111Eh````0Eb0FfEd32103020221032103032103232103222221032103211122220321032103210321032``FhEl1000010100100101010100010001010101010```````````````","f":"```{{{d{b}}{d{f}}{d{b}}}{{l{hj}}}}{{b{d{f}}{d{b}}nn}{{l{hj}}}}{{fA`}{{l{hj}}}}{{{Ab{b}}{Ab{f}}{d{b}}}{{l{hj}}}}{{A`A`bf{d{f}}{d{b}}nnAd}{{l{hj}}}}{{{Ab{b}}{Ab{f}}}{{l{hj}}}}{{}h}`{Af{{l{hj}}}}``````````{AhAh}000{Aj{{Aj{c}}}{}}0{{{Aj{Al}}}{{Aj{Alc}}}{}}0{{}Ah}{AnAf}1{B`{{Aj{c}}}{}}0{B`{{Aj{Alc}}}{}}0{B`h}0{cc{}}0{{{Aj{Bb}}}{{l{AnBd}}}}{{{Aj{Bb}}}{{l{AfBd}}}}{{{Aj{AlBb}}}{{l{AnBd}}}}{{{Aj{AlBb}}}{{l{AfBd}}}}{{}{{d{Bf}}}}{{{Aj{Bh}}}Ad}{{}B`}0{{}c{}}0{{}An}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{AjBj}0{{{Aj{AlAn}}{Aj{Bb}}}{{l{hBd}}}}{{{Aj{AlAf}}{Aj{Bb}}}{{l{hBd}}}}{{{Aj{AlAn}}{Aj{AlBb}}}{{l{hBd}}}}{{{Aj{AlAf}}{Aj{AlBb}}}{{l{hBd}}}}{{{Aj{An}}}{{l{hf}}}}{{}c{}}0{Bln}{Bnn}{C`d}{CbAb}{CdAb}{Cff}{Bld}{Bnd}{BnAd}6{Blb}7{Cbd}{Bnb}{Bnf}<;6598{BnA`}0{CfA`}``{{}B`}`{ChCj}{Aj{{Aj{c}}}{}}00{{{Aj{Al}}}{{Aj{Alc}}}{}}00{Clf}{{{Aj{Cl}}}Cl}{{Aj{Aj{Alc}}}h{}}{{AjA`}h}{Cnf}{{{Aj{Ch}}{Aj{Cl}}{Aj{Bh}}}{{l{Cnj}}}}{{}Ch}{B`{{Aj{c}}}{}}00{B`{{Aj{Alc}}}{}}00{c{{l{Cl}}}D`}{B`h}0{{{Aj{AlCn}}}h}1{{{Aj{Ch}}{Aj{Cn}}{Aj{Bh}}}{{l{Clj}}}}{cc{}}00{{}B`}00{{}c{}}009{fCn}{Clf}0{{{Aj{Cl}}c}lDb}{Ajc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{AjBj}00{{{Aj{Ch}}{Aj{Cl}}{Aj{Bh}}}{{l{Adj}}}}{ClA`}{{}c{}}00>``````````````{Aj{{Aj{c}}}{}}{{{Aj{Al}}}{{Aj{Alc}}}{}}{B`{{Aj{c}}}{}}{B`{{Aj{Alc}}}{}}{B`h}{{{Aj{j}}{Aj{AlDd}}}Df}0{Dhj}{cc{}}{Djj}{Dlj}{Dnj}{{}B`}{{}c{}}{{{Aj{j}}}{{d{{Aj{E`}}}}}}{Ajf}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{AjBj}{{}c{}}``````{Ebn}{Aj{{Aj{c}}}{}}000{{{Aj{Al}}}{{Aj{Alc}}}{}}000{Edf}{{{Aj{Eb}}{Aj{Bh}}}{{l{Efj}}}}{EdEh}{{}Eb}{B`{{Aj{c}}}{}}000{B`{{Aj{Alc}}}{}}000{c{{l{Ed}}}D`}{c{{l{Eh}}}D`}{B`h}000{EbEj}{{{Aj{Eh}}{Aj{AlDd}}}Df}{cc{}}000{{{Aj{Eb}}{Aj{Cl}}}{{l{Efj}}}}{{{Aj{Eb}}{Aj{{En{El}}}}}f}{{{Aj{Eb}}{Aj{{En{El}}}}}{{l{{Ab{Ef}}j}}}}{{{Aj{Eb}}{Aj{El}}}{{l{Efj}}}}{{}B`}000{{}c{}}000>{{{Aj{Ed}}}{{l{Clj}}}}{{{Aj{Bh}}}{{l{Edj}}}}{{{Aj{Ed}}}{{l{Elj}}}}{{{Aj{Eb}}{Aj{Cl}}{Aj{F`}}}{{l{hj}}}}{{{Aj{Eb}}{Aj{Ef}}{Aj{F`}}}{{l{hj}}}}{{{Aj{Eb}}{Aj{{En{El}}}}{Aj{F`}}{Aj{Bh}}}{{l{{Ab{f}}j}}}}{Ebn}{{{Aj{Ed}}c}lDb}{{{Aj{Eh}}c}lDb}{c{{l{e}}}{}{}}000{{}{{l{c}}}{}}000{AjBj}000{{}c{}}000{{Ejnn}Eb}``{Aj{{Aj{c}}}{}}0{{{Aj{Al}}}{{Aj{Alc}}}{}}0{{{Aj{El}}}El}{{Aj{Aj{Alc}}}h{}}{{AjA`}h}{B`{{Aj{c}}}{}}0{B`{{Aj{Alc}}}{}}0{c{{l{El}}}D`}{B`h}0{{{Aj{El}}{Aj{AlDd}}}Df}{cc{}}0{{}B`}0{{}c{}}0{{{Aj{{En{El}}}}}{{l{fj}}}}{{{Aj{El}}c}lDb}{Elf}{ElA`}{{{Aj{Bh}}A`A`}{{l{{Ab{El}}j}}}}1{Ajc{}}2{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{AjBj}0{{{Aj{{En{El}}}}}{{l{hj}}}}6{{}c{}}0{{{Aj{Bh}}}{{l{Adj}}}}{A`{{l{fj}}}}{{{Aj{Bh}}}{{l{Clj}}}}{{{Aj{F`}}}{{l{Clj}}}}{{{Aj{{En{f}}}}}{{l{{Ab{El}}j}}}}{{{Aj{{En{c}}}}}{{l{{Ab{El}}j}}}{{Fb{F`}}}}{{{Aj{Bh}}}h}000{{{Aj{F`}}}{{l{fj}}}}{{{Aj{Bh}}}{{l{fj}}}}0{{{Aj{Bh}}}{{l{hj}}}}{{{Aj{F`}}{Aj{Bh}}}{{l{hj}}}}","D":"G`","p":[[5,"PathBuf",317],[6,"Option",318,null,1],[5,"String",319],[1,"unit"],[6,"QRCryptError",149],[6,"Result",320,null,1],[1,"u32"],[1,"u8"],[5,"Vec",321],[1,"bool"],[6,"Commands",14],[5,"Command",322],[1,"reference",null,null,1],[0,"mut"],[5,"Cli",14],[1,"usize"],[5,"ArgMatches",323],[8,"Error",324],[5,"Id",325],[1,"str"],[5,"TypeId",326],[15,"Encrypt",65],[15,"Split",65],[15,"Decrypt",65],[15,"Reconstruct",65],[15,"Validate",65],[15,"Example",65],[5,"Crypto",89],[5,"Argon2",327],[5,"EncryptedData",89],[5,"SecretData",89],[10,"Deserializer",328],[10,"Serializer",329],[5,"Formatter",330],[8,"Result",330],[5,"Error",331],[5,"Error",332],[6,"DecodeError",333],[6,"FromHexError",334],[10,"Error",335],[5,"QRGenerator",183],[5,"QRData",183],[6,"DynamicImage",336],[6,"QRDataType",183],[6,"EcLevel",337],[5,"ShamirShare",261],[1,"slice"],[5,"Path",317],[10,"AsRef",338],[8,"Result",149],[5,"QRReader",183],[5,"ShamirSecretSharing",261]],"r":[],"b":[[168,"impl-Display-for-QRCryptError"],[169,"impl-Debug-for-QRCryptError"],[170,"impl-From%3CError%3E-for-QRCryptError"],[172,"impl-From%3CError%3E-for-QRCryptError"],[173,"impl-From%3CDecodeError%3E-for-QRCryptError"],[174,"impl-From%3CFromHexError%3E-for-QRCryptError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUBDwAAABAAFwAQACoABwA0AA0AWgAdAHsAAgCBABcAmgACAJ4ADQCtAAMAsgAoAN8ABwDrACsAGQEBAB0BIAA=","P":[[26,"T"],[30,""],[33,"T"],[37,""],[39,"T"],[41,""],[49,"U"],[51,""],[52,"U,T"],[54,"U"],[56,""],[63,"V"],[65,""],[94,"T"],[100,""],[102,"T"],[103,""],[107,"T"],[113,"__D"],[114,""],[119,"T"],[122,""],[125,"U"],[128,""],[132,"__S"],[133,"T"],[134,"U,T"],[137,"U"],[140,""],[145,"V"],[148,""],[163,"T"],[167,""],[171,"T"],[172,""],[176,"U"],[177,""],[179,"U,T"],[180,"U"],[181,""],[182,"V"],[189,""],[190,"T"],[198,""],[202,"T"],[210,"__D"],[212,""],[218,"T"],[222,""],[230,"U"],[234,""],[242,"__S"],[244,"U,T"],[248,"U"],[252,""],[256,"V"],[260,""],[263,"T"],[267,""],[268,"T"],[269,""],[270,"T"],[274,"__D"],[275,""],[278,"T"],[280,""],[282,"U"],[284,""],[285,"__S"],[286,""],[290,"T"],[291,""],[292,"U,T"],[294,"U"],[296,""],[300,"V"],[302,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[9099]}